{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Catalog/client/src/components/CustomInput.js\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\n\nclass CustomInput extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    PubSub.subscribe(\"errorsInsertingAlbum\", function (topic, error) {\n      if (error.field === this.props.name) {\n        // console.log(error.message);\n        if (error.message !== undefined) {\n          this.setState({\n            errorMessage: error.message\n          });\n        }\n      }\n    }.bind(this));\n    PubSub.subscribe(\"cleanErrorsInsertingAlbum\", function (topic) {\n      this.setState({\n        errorMessage: ''\n      });\n    }.bind(this));\n  }\n\n  render() {\n    console.log(\"alterando \" + this.errorMessage);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"input\", {\n      id: this.props.id,\n      type: this.props.type,\n      name: this.props.name,\n      onChange: this.props.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.errorMessage));\n  }\n\n}\n\nexport default CustomInput;","map":{"version":3,"sources":["/home/douglas/Catalog/client/src/components/CustomInput.js"],"names":["React","Component","PubSub","CustomInput","constructor","state","errorMessage","componentDidMount","subscribe","topic","error","field","props","name","message","undefined","setState","bind","render","console","log","id","type","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAEhCG,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAC;AAAd,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfL,IAAAA,MAAM,CAACM,SAAP,CAAiB,sBAAjB,EAAyC,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AAC3D,UAAGA,KAAK,CAACC,KAAN,KAAgB,KAAKC,KAAL,CAAWC,IAA9B,EAAmC;AAC/B;AACA,YAAGH,KAAK,CAACI,OAAN,KAAkBC,SAArB,EAA+B;AAC3B,eAAKC,QAAL,CAAc;AAACV,YAAAA,YAAY,EAAEI,KAAK,CAACI;AAArB,WAAd;AACH;AACJ;AACJ,KAPwC,CAOvCG,IAPuC,CAOlC,IAPkC,CAAzC;AASAf,IAAAA,MAAM,CAACM,SAAP,CAAiB,2BAAjB,EAA8C,UAASC,KAAT,EAAe;AACzD,WAAKO,QAAL,CAAc;AAACV,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAF6C,CAE5CW,IAF4C,CAEvC,IAFuC,CAA9C;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKd,YAAhC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWS,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKT,KAAL,CAAWC,IAA3C,CADJ,EAEI;AAAO,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWS,EAAtB;AAA0B,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWU,IAA3C;AAAiD,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAAlE;AAAwE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWW,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKjB,YAAZ,CAHJ,CADJ;AAOH;;AA/B+B;;AAkCpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\n\nclass CustomInput extends Component {\n\n    constructor(){\n        super();\n        this.state = {errorMessage:''};\n    }\n\n    componentDidMount(){\n        PubSub.subscribe(\"errorsInsertingAlbum\", function(topic, error){\n            if(error.field === this.props.name){\n                // console.log(error.message);\n                if(error.message !== undefined){\n                    this.setState({errorMessage: error.message});\n                }\n            }\n        }.bind(this));\n\n        PubSub.subscribe(\"cleanErrorsInsertingAlbum\", function(topic){\n            this.setState({errorMessage: ''});\n        }.bind(this));\n    }\n    \n    render(){\n        console.log(\"alterando \" + this.errorMessage);\n        return (\n            <div>\n                <label htmlFor={this.props.id}>{this.props.name}</label>\n                <input id={this.props.id} type={this.props.type} name={this.props.name} onChange={this.props.onChange}/>\n                <span>{this.errorMessage}</span>\n            </div>\n        );\n    }\n}\n\nexport default CustomInput;"]},"metadata":{},"sourceType":"module"}