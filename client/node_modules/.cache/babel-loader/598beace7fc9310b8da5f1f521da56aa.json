{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Catalog/client/src/components/FormInputs.js\";\nimport React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\nimport PubSub from 'pubsub-js';\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      description: '',\n      searchString: ''\n    };\n    this.findByText = this.findByText.bind(this);\n    this.createRecord = this.createRecord.bind(this);\n    this.setArtist = this.setArtist.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.setSearchString = this.setSearchString.bind(this);\n  }\n\n  findByText(event) {\n    event.preventDefault();\n    let url = \"http://localhost:3001/albums/bytext/\" + this.state.searchString;\n    $.ajax({\n      url: url,\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'get',\n      success: function (response) {// this.setState({albums:response});\n      },\n      error: function (response) {\n        console.log(response.status);\n      }\n    });\n  }\n\n  createRecord(event) {\n    event.preventDefault();\n    $.ajax({\n      url: \"http://localhost:3001/albums\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        artist: this.state.artist,\n        description: this.state.description\n      }),\n      success: function (response) {\n        PubSub.publish('updateAlbums');\n        this.setState({\n          artist: '',\n          description: ''\n        });\n      },\n      error: function (response) {\n        console.log(response.responseJSON);\n        PubSub.publish('errorsInsertingAlbum', response.responseJSON);\n      }\n    });\n  }\n\n  setArtist(event) {\n    this.setState({\n      artist: event.target.value\n    });\n  }\n\n  setDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  setSearchString(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"actions\",\n      onSubmit: this.createRecord,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelArtist\",\n      type: \"text\",\n      name: \"Artist\",\n      onChange: this.setArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"labelDescription\",\n      type: \"text\",\n      name: \"Description\",\n      onChange: this.setDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      text: \"Add\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"search\",\n      onSubmit: this.findByText,\n      method: \"get\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelSearch\",\n      type: \"text\",\n      name: \"Search\",\n      onChange: this.setSearchString,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"searchInputButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormInputs;","map":{"version":3,"sources":["/home/douglas/Catalog/client/src/components/FormInputs.js"],"names":["React","Component","CustomInput","CustomButton","PubSub","$","FormInputs","constructor","state","artist","description","searchString","findByText","bind","createRecord","setArtist","setDescription","setSearchString","event","preventDefault","url","ajax","contentType","dataType","type","success","response","error","console","log","status","data","JSON","stringify","publish","setState","responseJSON","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\nimport PubSub from 'pubsub-js';\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n\n    constructor(){\n        super();\n        this.state = {artist:'', description:'', searchString: ''};\n        this.findByText = this.findByText.bind(this);\n        this.createRecord = this.createRecord.bind(this);\n        this.setArtist = this.setArtist.bind(this);\n        this.setDescription = this.setDescription.bind(this);\n        this.setSearchString = this.setSearchString.bind(this);\n    }\n\n    findByText(event){\n        event.preventDefault();\n        let url = \"http://localhost:3001/albums/bytext/\" + this.state.searchString;\n\n        $.ajax({\n            url: url,\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'get',\n            success:function(response){\n                // this.setState({albums:response});\n            },\n            error: function(response){\n                console.log(response.status);\n            }\n        });\n    }\n\n    createRecord(event){\n        event.preventDefault();\n        $.ajax({\n            url:\"http://localhost:3001/albums\",\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'post',\n            data: JSON.stringify({artist: this.state.artist, description: this.state.description}),\n            success:function(response){\n                PubSub.publish('updateAlbums');\n                this.setState({artist:'', description:''});\n            },\n            error: function(response){\n                console.log(response.responseJSON);\n                PubSub.publish('errorsInsertingAlbum', response.responseJSON);\n            }\n        });\n    }\n\n    setArtist(event){\n        this.setState({artist:event.target.value});\n    }\n\n    setDescription(event){\n        this.setState({description:event.target.value});\n    }\n\n    setSearchString(event){\n        this.setState({description:event.target.value});\n    }\n\n    render(){\n        return (\n            <div>\n                <form id=\"actions\" onSubmit={this.createRecord} method=\"post\">\n                    <CustomInput id='labelArtist' type='text' name='Artist' onChange={this.setArtist}/>\n                    <CustomInput id='labelDescription' type='text' name='Description' onChange={this.setDescription}/>\n                    <CustomButton text='Add' type=\"submit\"/>\n                </form>\n                <form id=\"search\" onSubmit={this.findByText} method=\"get\">\n                    <CustomInput id='labelSearch' type='text' name='Search' onChange={this.setSearchString}/>\n                    <input id='searchInputButton' type='submit'/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default FormInputs;"]},"metadata":{},"sourceType":"module"}