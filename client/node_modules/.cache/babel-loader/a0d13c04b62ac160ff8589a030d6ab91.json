{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Catalog/client/src/components/FormInputs.js\";\nimport React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\nimport PubSub from 'pubsub-js';\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      artist: '',\n      description: '',\n      searchString: ''\n    };\n    this.findByText = this.findByText.bind(this);\n    this.createRecord = this.createRecord.bind(this);\n    this.setName = this.setName.bind(this);\n    this.setArtist = this.setArtist.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.setSearchString = this.setSearchString.bind(this);\n  }\n\n  findByText(event) {\n    event.preventDefault();\n    let path = this.state.searchString.length === 0 ? '' : this.state.searchString;\n    let url = 'http://localhost:3001/albums/bytext/' + path;\n    $.ajax({\n      url: url,\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'get',\n      success: function (response) {\n        PubSub.publish('filterAlbums', response);\n      },\n      error: function (response) {\n        PubSub.publish('errorsInputs', response.responseJSON);\n      },\n      beforeSend: function () {\n        PubSub.publish('cleanErrorsInsertingAlbum');\n      }\n    });\n  }\n\n  createRecord(event) {\n    event.preventDefault();\n    $.ajax({\n      url: \"http://localhost:3001/albums\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        name: this.state.name,\n        artist: this.state.artist,\n        description: this.state.description\n      }),\n      success: function () {\n        PubSub.publish('updateAlbums');\n        this.setState({\n          name: '',\n          artist: '',\n          description: ''\n        });\n      }.bind(this),\n      error: function (response) {\n        PubSub.publish('errorsInputs', response.responseJSON);\n      },\n      beforeSend: function () {\n        PubSub.publish('cleanErrorsInsertingAlbum');\n      }\n    });\n  }\n\n  setName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  setArtist(event) {\n    this.setState({\n      artist: event.target.value\n    });\n  }\n\n  setDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  setSearchString(event) {\n    this.setState({\n      searchString: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"actions\",\n      onSubmit: this.createRecord,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelName\",\n      type: \"text\",\n      name: \"Name\",\n      onChange: this.setName,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"labelArtist\",\n      type: \"text\",\n      name: \"Artist\",\n      onChange: this.setArtist,\n      value: this.state.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"labelDescription\",\n      type: \"text\",\n      name: \"Description\",\n      onChange: this.setDescription,\n      value: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      text: \"Add\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"search\",\n      onSubmit: this.findByText,\n      method: \"get\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelSearch\",\n      type: \"text\",\n      name: \"Search\",\n      onChange: this.setSearchString,\n      value: this.state.searchString,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      text: \"Filter\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormInputs;","map":{"version":3,"sources":["/home/douglas/Catalog/client/src/components/FormInputs.js"],"names":["React","Component","CustomInput","CustomButton","PubSub","$","FormInputs","constructor","state","name","artist","description","searchString","findByText","bind","createRecord","setName","setArtist","setDescription","setSearchString","event","preventDefault","path","length","url","ajax","contentType","dataType","type","success","response","publish","error","responseJSON","beforeSend","data","JSON","stringify","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\nimport PubSub from 'pubsub-js';\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n\n    constructor(){\n        super();\n        this.state = {name:'', artist:'', description:'', searchString: ''};\n        this.findByText = this.findByText.bind(this);\n        this.createRecord = this.createRecord.bind(this);\n        this.setName = this.setName.bind(this);\n        this.setArtist = this.setArtist.bind(this);\n        this.setDescription = this.setDescription.bind(this);\n        this.setSearchString = this.setSearchString.bind(this);\n    }\n\n    findByText(event){\n        event.preventDefault();\n        let path =  this.state.searchString.length === 0? '' : this.state.searchString;\n        let url = 'http://localhost:3001/albums/bytext/' + path;\n\n        $.ajax({\n            url: url,\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'get',\n            success:function(response){\n                PubSub.publish('filterAlbums', response);\n            },\n            error: function(response){\n                PubSub.publish('errorsInputs', response.responseJSON);\n            },\n            beforeSend: function(){\n                PubSub.publish('cleanErrorsInsertingAlbum');\n            }\n        });\n    }\n\n    createRecord(event){\n        event.preventDefault();\n        $.ajax({\n            url:\"http://localhost:3001/albums\",\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'post',\n            data: JSON.stringify({name: this.state.name, artist: this.state.artist, description: this.state.description}),\n            success:function(){\n                PubSub.publish('updateAlbums');\n                this.setState({name:'', artist:'', description:''});\n            }.bind(this),\n            error: function(response){\n                PubSub.publish('errorsInputs', response.responseJSON);\n            },\n            beforeSend: function(){\n                PubSub.publish('cleanErrorsInsertingAlbum');\n            }\n        });\n    }\n\n    setName(event){\n        this.setState({name:event.target.value});\n    }\n\n    setArtist(event){\n        this.setState({artist:event.target.value});\n    }\n\n    setDescription(event){\n        this.setState({description:event.target.value});\n    }\n\n    setSearchString(event){\n        this.setState({searchString:event.target.value});\n    }\n\n    render(){\n        return (\n            <div>\n                <form id=\"actions\" onSubmit={this.createRecord} method=\"post\">\n                    <CustomInput id='labelName' type='text' name='Name' onChange={this.setName} value={this.state.name}/>\n                    <CustomInput id='labelArtist' type='text' name='Artist' onChange={this.setArtist} value={this.state.artist}/>\n                    <CustomInput id='labelDescription' type='text' name='Description' onChange={this.setDescription} value={this.state.description}/>\n                    <CustomButton text='Add' type=\"submit\"/>\n                </form>\n                <form id=\"search\" onSubmit={this.findByText} method=\"get\">\n                    <CustomInput id='labelSearch' type='text' name='Search' onChange={this.setSearchString} value={this.state.searchString}/>\n                    <CustomButton text='Filter' type=\"submit\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default FormInputs;"]},"metadata":{},"sourceType":"module"}