{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Catalog/client/src/components/FormInputs.js\";\nimport React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton'; // import PubSub from 'pubsub-js';\n\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      description: ''\n    };\n    this.findByText = this.findByText.bind(this);\n    this.createRecord = this.createRecord.bind(this);\n    this.setArtist = this.setArtist.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.setSearchString = this.setSearchString.bind(this);\n  }\n\n  findByText(event) {\n    event.preventDefault();\n    $.ajax({\n      url: \"http://localhost:3001/albums/bytext/paranhos\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'get',\n      success: function (response) {// this.setState({albums:response});\n      },\n      error: function (response) {\n        console.log(response);\n      }\n    });\n  }\n\n  createRecord(event) {\n    event.preventDefault();\n    $.ajax({\n      url: \"http://localhost:3001/albums\",\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        artist: this.state.artist,\n        description: this.state.description\n      }),\n      success: function (response) {\n        this.props.refreshTableMethod();\n      },\n      error: function (response) {\n        console.log(response);\n      }\n    });\n  }\n\n  setArtist(event) {\n    this.setState({\n      artist: event.target.value\n    });\n  }\n\n  setDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  setSearchString(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"actions\",\n      onSubmit: this.createRecord,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelArtist\",\n      type: \"text\",\n      name: \"Artist\",\n      onChange: this.setArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"labelDescription\",\n      type: \"text\",\n      name: \"Description\",\n      onChange: this.setDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      text: \"Add\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      id: \"search\",\n      onSubmit: this.findByText,\n      method: \"get\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"labelSearch\",\n      type: \"text\",\n      name: \"Search\",\n      onChange: this.setSearchString,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"searchInputButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormInputs;","map":{"version":3,"sources":["/home/douglas/Catalog/client/src/components/FormInputs.js"],"names":["React","Component","CustomInput","CustomButton","$","FormInputs","constructor","state","artist","description","findByText","bind","createRecord","setArtist","setDescription","setSearchString","event","preventDefault","ajax","url","contentType","dataType","type","success","response","error","console","log","data","JSON","stringify","props","refreshTableMethod","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAE/BK,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,WAAW,EAAC;AAAxB,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDD,EAAAA,UAAU,CAACM,KAAD,EAAO;AACbA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,CAAC,CAACc,IAAF,CAAO;AACHC,MAAAA,GAAG,EAAC,8CADD;AAEHC,MAAAA,WAAW,EAAE,kBAFV;AAGHC,MAAAA,QAAQ,EAAE,MAHP;AAIHC,MAAAA,IAAI,EAAC,KAJF;AAKHC,MAAAA,OAAO,EAAC,UAASC,QAAT,EAAkB,CACtB;AACH,OAPE;AAQHC,MAAAA,KAAK,EAAE,UAASD,QAAT,EAAkB;AACrBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH;AAVE,KAAP;AAYH;;AAEDZ,EAAAA,YAAY,CAACI,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,CAAC,CAACc,IAAF,CAAO;AACHC,MAAAA,GAAG,EAAC,8BADD;AAEHC,MAAAA,WAAW,EAAE,kBAFV;AAGHC,MAAAA,QAAQ,EAAE,MAHP;AAIHC,MAAAA,IAAI,EAAC,MAJF;AAKHM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACtB,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAApB;AAA4BC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAApD,OAAf,CALH;AAMHc,MAAAA,OAAO,EAAC,UAASC,QAAT,EAAkB;AACtB,aAAKO,KAAL,CAAWC,kBAAX;AACH,OARE;AASHP,MAAAA,KAAK,EAAE,UAASD,QAAT,EAAkB;AACrBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH;AAXE,KAAP;AAaH;;AAEDX,EAAAA,SAAS,CAACG,KAAD,EAAO;AACZ,SAAKiB,QAAL,CAAc;AAACzB,MAAAA,MAAM,EAACQ,KAAK,CAACkB,MAAN,CAAaC;AAArB,KAAd;AACH;;AAEDrB,EAAAA,cAAc,CAACE,KAAD,EAAO;AACjB,SAAKiB,QAAL,CAAc;AAACxB,MAAAA,WAAW,EAACO,KAAK,CAACkB,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDpB,EAAAA,eAAe,CAACC,KAAD,EAAO;AAClB,SAAKiB,QAAL,CAAc;AAACxB,MAAAA,WAAW,EAACO,KAAK,CAACkB,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,QAAQ,EAAE,KAAKxB,YAAlC;AAAgD,MAAA,MAAM,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,aAAhB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAC,QAA/C;AAAwD,MAAA,QAAQ,EAAE,KAAKC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,kBAAhB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAA+C,MAAA,IAAI,EAAC,aAApD;AAAkE,MAAA,QAAQ,EAAE,KAAKC,cAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,EAMI;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,QAAQ,EAAE,KAAKJ,UAAjC;AAA6C,MAAA,MAAM,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,aAAhB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAC,QAA/C;AAAwD,MAAA,QAAQ,EAAE,KAAKK,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,EAAE,EAAC,mBAAV;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,CADJ;AAaH;;AAvE8B;;AA0EnC,eAAeV,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\n// import PubSub from 'pubsub-js';\nimport $ from 'jquery';\n\nclass FormInputs extends Component {\n\n    constructor(){\n        super();\n        this.state = {artist:'', description:''}\n        this.findByText = this.findByText.bind(this);\n        this.createRecord = this.createRecord.bind(this);\n        this.setArtist = this.setArtist.bind(this);\n        this.setDescription = this.setDescription.bind(this);\n        this.setSearchString = this.setSearchString.bind(this);\n    }\n\n    findByText(event){\n        event.preventDefault();\n        $.ajax({\n            url:\"http://localhost:3001/albums/bytext/paranhos\",\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'get',\n            success:function(response){\n                // this.setState({albums:response});\n            },\n            error: function(response){\n                console.log(response);\n            }\n        });\n    }\n\n    createRecord(event){\n        event.preventDefault();\n        $.ajax({\n            url:\"http://localhost:3001/albums\",\n            contentType: 'application/json',\n            dataType: 'json',\n            type:'post',\n            data: JSON.stringify({artist: this.state.artist, description: this.state.description}),\n            success:function(response){\n                this.props.refreshTableMethod();\n            },\n            error: function(response){\n                console.log(response);\n            }\n        });\n    }\n\n    setArtist(event){\n        this.setState({artist:event.target.value});\n    }\n\n    setDescription(event){\n        this.setState({description:event.target.value});\n    }\n\n    setSearchString(event){\n        this.setState({description:event.target.value});\n    }\n\n    render(){\n        return (\n            <div>\n                <form id=\"actions\" onSubmit={this.createRecord} method=\"post\">\n                    <CustomInput id='labelArtist' type='text' name='Artist' onChange={this.setArtist}/>\n                    <CustomInput id='labelDescription' type='text' name='Description' onChange={this.setDescription}/>\n                    <CustomButton text='Add' type=\"submit\"/>\n                </form>\n                <form id=\"search\" onSubmit={this.findByText} method=\"get\">\n                    <CustomInput id='labelSearch' type='text' name='Search' onChange={this.setSearchString}/>\n                    <input id='searchInputButton' type='submit'/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default FormInputs;"]},"metadata":{},"sourceType":"module"}